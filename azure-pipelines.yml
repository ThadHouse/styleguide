# Gradle
# Build your Java projects and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/java

resources:
  containers:
  - container: ubuntu18
    image: ubuntu:18.04
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

jobs:
  - job: Styleguide
    pool:
      vmImage: 'Ubuntu 16.04'

    container: ubuntu18

    steps:
        - script: |
            /tmp/docker exec -t -u 0 ci-container \
            sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
          displayName: Set up sudo
        - script: |
            sudo apt-get update -y
            sudo apt-get install clang-format python3-setuptools git -y
          displayName: 'Install Dependencies'
        - script: |
            git fetch --unshallow
            cd wpiformat
            python3 setup.py build
            python3 setup.py install --optimize=1 --skip-build
            python3 setup.py test
          displayName: 'Build'

  - job: WindowsStyleguide
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - script: |
          choco install llvm --version 6.0.1
        displayName: 'Install Dependencies'
      - script: |
          git fetch --unshallow
          cd wpiformat
          py -3 setup.py build
          py -3 setup.py install --optimize=1 --skip-build
          py -3 setup.py test
        displayName: 'Build'
